{
  "name": "multi",
  "test_cases": [
    {
      "id": 1,
      "name": "Linking",
      "meta": {
        "info": "This phase includes pre-linking, discovery and linking."
      },
      "fileInfo": {
        "path": "test-cases/thirdparty-linking.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Get Linking Providers",
          "meta": {
            "info": "This request allows us get the list of providers."
          },
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/linking/providers",
          "path": "/linking/providers",
          "method": "get",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "Accounts Discovery",
          "meta": {
            "info": "PISP presents thirdparty enabled DFSPs to user. User selects a dfpsa and provides a generic ID to search for associated accounts."
          },
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/linking/accounts/{fspId}/{userId}",
          "path": "/linking/accounts/dfspa/username1234",
          "method": "get",
          "params": {
            "fspId": "dfspa",
            "userId": "username1234"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "description": "Request Consent",
          "meta": {
            "info": "PISP presents accounts to user. User selects one or more accounts to link. The DFSP is expected to send an OTP to the end user which will be used in the next linking step."
          },
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/linking/request-consent",
          "path": "/linking/request-consent",
          "method": "post",
          "body": {
            "toParticipantId": "dfspa",
            "consentRequestId": "{$function.generic.generateUUID}",
            "accounts": [
              {
                "accountNickname": "dfspa.user.nickname1",
                "address": "dfspa.username.1234",
                "id": "dfspa.username.1234",
                "currency": "ZAR"
              },
              {
                "accountNickname": "dfspa.user.nickname2",
                "address": "dfspa.username.5678",
                "id": "dfspa.username.5678",
                "currency": "USD"
              }
            ],
            "actions": [
              "ACCOUNTS_GET_BALANCE"
            ],
            "userId": "username1234",
            "callbackUri": "pisp-app://callback"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        },
        {
          "id": 4,
          "description": "Authentication for consent",
          "meta": {
            "info": "PISP has obtained authToken from end-user(OTP) or through a callback(Web)."
          },
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/linking/request-consent/{ID}/authenticate",
          "path": "/linking/request-consent/{$prev.3.request.body.consentRequestId}/authenticate",
          "method": "patch",
          "params": {
            "ID": "{$prev.3.request.body.consentRequestId}"
          },
          "body": {
            "authToken": "123456"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        },
        {
          "id": 5,
          "description": "Pass Credential",
          "meta": {
            "info": "PISP has obtained credential from the end-user."
          },
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/linking/request-consent/{ID}/pass-credential",
          "path": "/linking/request-consent/{$prev.3.request.body.consentRequestId}/pass-credential",
          "method": "post",
          "params": {
            "ID": "{$prev.3.request.body.consentRequestId}"
          },
          "body": {
            "credential": {
              "payload": {
                "id": "HskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAtw",
                "rawId": "HskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAtw==",
                "response": {
                  "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiWXpSaFpHRmlZak16WlRrek1EWmlNRE00TURnNE1UTXlZV1ptWTJSbE5UVTJZelV3WkRneVpqWXdNMlkwTnpjeE1XRTVOVEV3WW1ZelltVmxaalprTmciLCJvcmlnaW4iOiJodHRwOi8vbG9jYWxob3N0OjQyMTgxIiwiY3Jvc3NPcmlnaW4iOmZhbHNlfQ==",
                  "attestationObject": "o2NmbXRmcGFja2VkZ2F0dFN0bXSjY2FsZyZjc2lnWEcwRQIhAN2JDPPTse/45EHSqSpEJiiok5sns+HqdJch3+gsL09VAiAh7W7ZhQC8gMIkgwcA+S4rQkaHoHnP9AkkohaKCuuA62N4NWOBWQLBMIICvTCCAaWgAwIBAgIECwXNUzANBgkqhkiG9w0BAQsFADAuMSwwKgYDVQQDEyNZdWJpY28gVTJGIFJvb3QgQ0EgU2VyaWFsIDQ1NzIwMDYzMTAgFw0xNDA4MDEwMDAwMDBaGA8yMDUwMDkwNDAwMDAwMFowbjELMAkGA1UEBhMCU0UxEjAQBgNVBAoMCVl1YmljbyBBQjEiMCAGA1UECwwZQXV0aGVudGljYXRvciBBdHRlc3RhdGlvbjEnMCUGA1UEAwweWXViaWNvIFUyRiBFRSBTZXJpYWwgMTg0OTI5NjE5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIRpvsbWJJcsKwRhffCrjqLSIEBR5sR7/9VXgfZdRvSsXaiUt7lns44WZIFuz6ii/j9f8fadcBUJyrkhY5ZH8WqNsMGowIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjEwEwYLKwYBBAGC5RwCAQEEBAMCBDAwIQYLKwYBBAGC5RwBAQQEEgQQFJogIY72QTOWuIH41bfx9TAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQA+/qPfPSrgclePfgTQ3VpLaNsBr+hjLhi04LhzQxiRGWwYS+vB1TOiPXeLsQQIwbmqQU51doVbCTaXGLNIr1zvbLAwhnLWH7i9m4ahCqaCzowtTvCQ7VBUGP5T1M4eYnoo83IDCVjQj/pZG8QYgOGOigztGoWAf5CWcUF6C0UyFbONwUcqJEl2QLToa/7E8VRjm4W46IAUljYkODVZASv8h3wLROx9p5TSBlSymtwdulxQe/DKbfNSvM3edA0up+EIJKLOOU+QTR2ZQV46fEW1/ih6m8vcaY6L3NW0eYpc7TXeijUJAgoUtya/vzmnRAecuY9bncoJt8PrvL2ir2kDaGF1dGhEYXRhWMRJlg3liA6MaHQ0Fw9kdmBbj+SuuaKGMseZXPO6gx2XY0EAAAAEFJogIY72QTOWuIH41bfx9QBAHskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAt6UBAgMmIAEhWCBYz+SV6fSy7ZjFzdj+SWxaMbfaw4ZT+wYgClN3v93kVSJYIGSzY41DNLrh1jXp4J53qCnq4+b9HYXud/0UEsZquDeV"
                },
                "type": "public-key"
              }
            }
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2,
      "name": "Transfer",
      "requests": [
        {
          "id": 1,
          "description": "partyLookup",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/thirdpartyTransaction/partyLookup",
          "path": "/thirdpartyTransaction/partyLookup",
          "method": "post",
          "body": {
            "transactionRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
            "payee": {
              "partyIdType": "MSISDN",
              "partyIdentifier": "9876543210"
            }
          },
          "disabled": false,
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "initiate",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/thirdpartyTransaction/{ID}/initiate",
          "path": "/thirdpartyTransaction/{$prev.1.request.body.transactionRequestId}/initiate",
          "method": "post",
          "params": {
            "ID": "{$prev.1.request.body.transactionRequestId}"
          },
          "body": {
            "payee": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "9876543210",
                "fspId": "dfspb"
              }
            },
            "payer": {
              "partyIdType": "THIRD_PARTY_LINK",
              "partyIdentifier": "1234567890",
              "fspId": "dfspa"
            },
            "amountType": "SEND",
            "amount": {
              "amount": "10",
              "currency": "EUR"
            },
            "transactionType": {
              "scenario": "TRANSFER",
              "initiator": "PAYER",
              "initiatorType": "CONSUMER"
            },
            "expiration": "2044-07-15T22:17:28.985-01:00"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "description": "approve",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 0,
            "type": "thirdparty_sdk_outbound",
            "specFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/thirdparty_sdk_outbound_0.1/trigger_templates"
          },
          "operationPath": "/thirdpartyTransaction/{ID}/approve",
          "path": "/thirdpartyTransaction/{$prev.1.request.body.transactionRequestId}/approve",
          "method": "post",
          "params": {
            "ID": "{$prev.1.request.body.transactionRequestId}"
          },
          "body": {
            "authorizationResponse": {
              "responseType": "ACCEPTED",
              "signedPayload": {
                "signedPayloadType": "FIDO",
                "fidoSignedPayload": {
                  "id": "45c-TkfkjQovQeAWmOy-RLBHEJ_e4jYzQYgD8VdbkePgM5d98BaAadadNYrknxgH0jQEON8zBydLgh1EqoC9DA",
                  "rawId": "45c+TkfkjQovQeAWmOy+RLBHEJ/e4jYzQYgD8VdbkePgM5d98BaAadadNYrknxgH0jQEON8zBydLgh1EqoC9DA==",
                  "response": {
                    "authenticatorData": "SZYN5YgOjGh0NBcPZHZgW4/krrmihjLHmVzzuoMdl2MBAAAACA==",
                    "clientDataJSON": "eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiQUFBQUFBQUFBQUFBQUFBQUFBRUNBdyIsIm9yaWdpbiI6Imh0dHA6Ly9sb2NhbGhvc3Q6NDIxODEiLCJjcm9zc09yaWdpbiI6ZmFsc2UsIm90aGVyX2tleXNfY2FuX2JlX2FkZGVkX2hlcmUiOiJkbyBub3QgY29tcGFyZSBjbGllbnREYXRhSlNPTiBhZ2FpbnN0IGEgdGVtcGxhdGUuIFNlZSBodHRwczovL2dvby5nbC95YWJQZXgifQ==",
                    "signature": "MEUCIDcJRBu5aOLJVc/sPyECmYi23w8xF35n3RNhyUNVwQ2nAiEA+Lnd8dBn06OKkEgAq00BVbmH87ybQHfXlf1Y4RJqwQ8="
                  },
                  "type": "public-key"
                }
              }
            }
          },
          "disabled": false,
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          }
        }
      ],
      "fileInfo": {
        "path": "test-cases/thirdparty-transfer.json"
      }
    }
  ]
}